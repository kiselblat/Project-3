{"version":3,"sources":["components/Header/index.js","components/Rater/index.js","utils/API.js","pages/Entry.js","components/Viewer/index.js","pages/Stats.js","components/Prefs/index.js","pages/Settings.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","href","Rater","props","type","id","value","name","onChange","checked","htmlFor","Submit","onClick","API","getAll","axios","get","getDay","date","saveDay","rating","post","sendMail","mail","Entry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","_event$target","target","setState","defineProperty","handleSubmit","preventDefault","console","log","concat","state","dayRating","bind","assertThisInitialized","Component","List","_ref","children","ListItem","_ref2","DataChart","Stats","days","loadDays","then","res","data","catch","err","length","map","day","key","_id","Sender","Settings","handleSend","to","html","App","react_router_dom","components_Header","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2b5da0f8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n        Mood Tracker App\r\n      </a>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nexport function Rater(props) {\r\n  return (\r\n    <div className=\"rating-selector\">\r\n\r\n      <div className=\"form-check form-check-inline\">\r\n        <input \r\n          className=\"form-check-input\" \r\n          type=\"checkbox\" \r\n          id=\"inlineCheckbox1\" \r\n          value=\"1\"\r\n          name={props.name}\r\n          onChange={props.onChange}\r\n          checked={props.checked === \"1\"}\r\n        />\r\n        <label className=\"form-check-label\" htmlFor=\"inlineCheckbox1\">1</label>\r\n      </div>\r\n      <div className=\"form-check form-check-inline\">\r\n        <input \r\n          className=\"form-check-input\" \r\n          type=\"checkbox\" \r\n          id=\"inlineCheckbox2\" \r\n          value=\"2\" \r\n          name={props.name}\r\n          onChange={props.onChange}\r\n          checked={props.checked === \"2\"}          \r\n        />\r\n        <label className=\"form-check-label\" htmlFor=\"inlineCheckbox2\">2</label>\r\n      </div>\r\n      <div className=\"form-check form-check-inline\">\r\n        <input \r\n          className=\"form-check-input\" \r\n          type=\"checkbox\" \r\n          id=\"inlineCheckbox3\" \r\n          value=\"3\" \r\n          name={props.name}\r\n          onChange={props.onChange}\r\n          checked={props.checked === \"3\"}          \r\n        />\r\n        <label className=\"form-check-label\" htmlFor=\"inlineCheckbox3\">3</label>\r\n      </div>\r\n      <div className=\"form-check form-check-inline\">\r\n        <input \r\n          className=\"form-check-input\" \r\n          type=\"checkbox\" \r\n          id=\"inlineCheckbox4\" \r\n          value=\"4\" \r\n          name={props.name}\r\n          onChange={props.onChange}\r\n          checked={props.checked === \"4\"}          \r\n        />\r\n        <label className=\"form-check-label\" htmlFor=\"inlineCheckbox4\">4</label>\r\n      </div>\r\n      <div className=\"form-check form-check-inline\">\r\n        <input \r\n          className=\"form-check-input\" \r\n          type=\"checkbox\" \r\n          id=\"inlineCheckbox5\" \r\n          value=\"5\" \r\n          name={props.name}\r\n          onChange={props.onChange}\r\n          checked={props.checked === \"5\"}          \r\n        />\r\n        <label className=\"form-check-label\" htmlFor=\"inlineCheckbox5\">5</label>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function Submit(props) {\r\n  return(\r\n    <input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\" onClick={props.onClick}></input>\r\n  )\r\n}","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all days\r\n  getAll: function() {\r\n    return axios.get(\"/api/days/\");\r\n  },\r\n  // Gets the day with the given date\r\n  getDay: function(date) {\r\n    return axios.get(\"/api/days/\" + date);\r\n  },\r\n  // Deletes the day with the given date\r\n  // deleteDay: function(date) {\r\n  //   return axios.delete(\"/api/days/\" + date);\r\n  // },\r\n  // Saves a day to the database\r\n  saveDay: function(rating) {\r\n    return axios.post(\"/api/days/\", rating);\r\n  },\r\n  sendMail: function(mail) {\r\n    return axios.post(\"/mail/send/\", mail);\r\n  }\r\n};\r\n","import React, {Component} from \"react\";\r\n\r\nimport {Rater, Submit} from \"../components/Rater\";\r\n\r\nimport API from \"../utils/API\";\r\n\r\nclass Entry extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state= {\r\n      dayRating: \"0\"\r\n    }\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  // handle any changes to the input fields\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    console.log(`Submitted: ${this.state.dayRating}`);\r\n\r\n    API.saveDay({ rating: this.state.dayRating });\r\n  }\r\n\r\n  render() {\r\n    \r\n    return(\r\n\r\n      <div>\r\n\r\n        <p className=\"lead\">How was your day?</p>\r\n        <p className=\"testingfield\">Selected Rating: {this.state.dayRating}</p>\r\n\r\n        <Rater\r\n          name='dayRating'\r\n          onChange={this.handleInputChange}\r\n          checked={this.state.dayRating}\r\n        />\r\n        <Submit \r\n          onClick={this.handleSubmit}\r\n        />\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n};\r\n\r\nexport default Entry;","import React from \"react\";\r\n\r\nimport \"./Viewer.css\";\r\n\r\n// This file exports both the List and ListItem components\r\n\r\nexport function List({ children }) {\r\n  return (\r\n    <div className=\"list-overflow-container\">\r\n      <ul className=\"list-group\">{children}</ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function ListItem({ children }) {\r\n  return <li className=\"list-group-item\">{children}</li>;\r\n}\r\n\r\nexport function DataChart(props) {\r\n  return (\r\n    <div>\r\n      <p>This is where the data chart goes</p>\r\n    </div>\r\n  )\r\n}","import React, {Component} from \"react\";\r\n\r\nimport {List, ListItem, DataChart} from \"../components/Viewer\";\r\nimport API from \"../utils/API\";\r\n\r\nclass Stats extends Component {\r\n  state = {\r\n    days: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadDays();\r\n  }\r\n\r\n  loadDays = () => {\r\n    API.getAll()\r\n      .then(res => {\r\n        console.log(res.data);\r\n        this.setState({ days: res.data });\r\n        }\r\n      )\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return(\r\n\r\n      <div>\r\n\r\n        <p className=\"lead\">A look back at your week</p>\r\n\r\n        <DataChart />\r\n\r\n        {this.state.days.length ? (\r\n          <List>\r\n            {this.state.days.map(day => (\r\n              <ListItem key={day._id}>\r\n                {day.date}: {day.rating}\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        ) : (\r\n          <p className=\"lead\">No Results to Display</p>\r\n        )}\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Stats;","import React from \"react\";\r\n\r\nexport function Sender(props) {\r\n  return(\r\n    <input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\" onClick={props.onClick}></input>\r\n  )\r\n}","import React, {Component} from \"react\";\r\n\r\nimport { Sender } from \"../components/Prefs\";\r\nimport API from \"../utils/API\";\r\n\r\nclass Settings extends Component {\r\n\r\n  handleSend = event => {\r\n    event.preventDefault();\r\n\r\n    console.log(`Sent mail`);\r\n\r\n    API.sendMail({to: \"kiselblat@gmail.com\", html: \"This is a test of the Mood Tracker Mailer\"});\r\n  }\r\n\r\n  render() {\r\n    return(\r\n\r\n      <div>\r\n\r\n        <p className=\"lead\">Let's test the mailer</p>\r\n\r\n        \r\n\r\n        <Sender \r\n          onClick={this.handleSend}\r\n        />\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Entry from \"./pages/Entry\"\nimport Stats from \"./pages/Stats\"\nimport Settings from \"./pages/Settings\"\n// import Rater from \"./components/Rater\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Entry} />\n            <Route exact path=\"/entry\" component={Entry} />\n            <Route exact path=\"/stats\" component={Stats} />\n            <Route exact path=\"/settings\" component={Settings} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}